# Namespace:    Hammurabi.Fam
# Summary:      Basic family relationships
# Updated:      2012-06-22
# Author:       Michael Poulshock

	
# BASIC FAMILY RELATIONSHIPS
# Marital and parent-child relationships are elsewhere
	
# Siblings
Tbool AreSiblings(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "Sibling")    # or, share a parent

# Half-siblings
Tbool AreHalfSiblings(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "Half sibling")  # or, share one parent

# Step-siblings
Tbool AreStepsiblings(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "Stepsibling")
	
# Grandparent
Tbool IsGrandparentOf(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "Grandparent", "Grandchild")
	
# Great-grandparent
Tbool IsGreatGrandparentOf(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "Great-grandparent", "Great-grandchild")
  
# Great-great-grandparent
Tbool IsGreatGreatGrandparentOf(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "Great-great-grandparent", "Great-great-grandchild")
        
# Aunt or uncle
Tbool IsAuntOrUncleOf(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "Aunt or uncle", "Niece or nephew")
        
# Great aunt or uncle
Tbool IsGreatAuntOrUncleOf(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "Great aunt or uncle", "Grand niece or nephew")
        
# Great-great aunt or uncle
Tbool IsGreatGreatAuntOrUncleOf(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "Great-great aunt or uncle", "Great-grand niece or nephew")
        
# Cousins
Tbool IsCousinOf(Person p1, Person p2) =
	IsFirstCousinOf(p1, p2) |
	IsNonFirstCousinOf(p1, p2)
        
# First cousins
Tbool IsFirstCousinOf(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "First cousin")
        
# Cousins, but not first cousins
Tbool IsNonFirstCousinOf(Person p1, Person p2) =
	Facts.Sym(p1, "FamilyRelationship", p2, "Other cousin")
        
# Ancestor
Tbool IsAncestorOf(Person p1, Person p2) =
	TboolIn IsAncestorOf(p1, p2)
	# or inferred

# String indicating the family relationship between two people.
Tstr Relationship(Person p1, Person p2) =
	TstrIn FamilyRelationship(p1,p2)
	

# CUSTODY, GUARDIANSHIP, ETC.	

# Legal custody
TboolIn HasCustodyOf(Person p1, Person p2)

# Ward (minor)
Tbool IsWardOf(Person child, Person adult) =
	IsMinor(child) &
	IsLegalGuardianOf(adult, child)

# Legal guardian (general)
TboolIn IsLegalGuardianOf(Person p1, Person p2) =
	CanBeAGuardianOf(p1, p2) &
	# !NotAGuardianOf(p1, p2) &
	TboolIn IsLegalGuardianOf(p1, p2)
        
# In loco parentis
TboolIn ActsInLocoParentisOf(Person p1, Person p2) =
	!IsParentOf(p2,p1) &
	TboolIn ActsInLocoParentisOf(p1, p2)

# Day-to-day responsibility
Tbool HasDayToDayResponsibilityFor(Person p1, Person p2) =
	CanBeAGuardianOf(p1, p2) &
	TboolIn HasDayToDayResponsibilityFor(p1, p2)

# Person can be the guardian of another
Tbool CanBeAGuardianOf(Person guard, Person ward) =
	Age(guard) >= 16 &						
	...
		IsDisabled(ward) |					# Disablity (need to clarify)
		...
			Age(ward) < 18 &				# Infancy...
			Age(guard) > Age(ward) &
			!IsParentOf(ward, guard) &		
			!InCivilUnion(guard, ward) &
			!IsDomesticPartnerOf(guard, ward) &
			!ExSpouses(guard, ward)

# Custodial parent
Tbool IsCustodialParentOf(Person p1, Person p2) =
	IsParentOf(p1,p2) &
	HasCustodyOf(p1,p2)


# OTHER

# Next of kin (nearest blood relative)
TboolIn IsNextOfKinOf(Person p1, Person p2) 
	# or inferred?
	
# Lives with any parent, custodian, or guardian (PCG)
Tbool LivesWithPCG(Person p) =
	members.Exists(IsLivingWithPCG(p,_))

	Tset members =
		Econ.HouseholdMembersOf(p) - p
	
# Person (p1) lives with parent, custodian, or guardian (PCG)
Tbool IsLivingWithPCG(Person p1, Person p2) =
	Econ.LivesWith(p1, p2) &
	...
		IsParentOf(p2, p1) |
		HasCustodyOf(p2, p1) |
		IsLegalGuardianOf(p2, p1)

# Cohabitation
Tbool AreCohabitating(Person p1, Person p2) =
	Econ.LivesWith(p1, p2) &
	AreInIntimateRelationship(p1, p2)

# Have a marriage contract or agreement
TboolInSym HaveMarriageAgreement(Person p1, Person p2)	

# Held each other out to the community as spouses
TboolInSym HeldOutAsSpouses(Person p1, Person p2)
	
# Intimate together
TboolInSym AreInIntimateRelationship(Person p1, Person p2)

# Cares for an incapacitated person
TboolIn CaresForIncapacitatedPerson(Person p) 


# UNIT TESTS

Test: Sanity1a	
- Person a
- Person b
- IsParentOf(a,b) = true
- Fam.IsParentOf(a,b).Out =?= true

Test: Sanity1b	
- Person a
- Person b
- IsParentOf(a,b) = true
- Fam.IsChildOf(b,a).Out =?= true

Test: Sanity2
- Person p
- IsMarried(p) = true
- Fam.IsMarried(p).Out =?= true

Test: ShortCircuit1
- Person p1
- Person p2
- ActsInLocoParentisOf(p1,p2) = true
- Fam.ActsInLocoParentisOf(p1,p2).Out =?= true

Test: ShortCircuit2
- Person p1
- Person p2
- ActsInLocoParentisOf(p1,p2) = false
- Fam.ActsInLocoParentisOf(p1,p2).Out =?= false

Test: ShortCircuit3
- Person p1
- Person p2
- IsParentOf(p2,p1) = true
- Fam.ActsInLocoParentisOf(p1,p2).Out =?= false

