# Namespace:    Hammurabi.Sandbox
# Summary:      A host of random unit tests
# Updated:      2012-07-26
# Author:       Michael Poulshock


# INFINITE LOOPS

# Recursive rule that looks for unknown people
TboolIn IsCitizen(Thing p) =
	# >> Is {1} a citizen by law?
	TboolIn IsCitizenByLaw(p) |
	IsCitizen(TheMotherOf(p))

# >>What's the name of {1}'s mother?
Thing TheMotherOf(Thing p) =
	# >>What's the name of {1}'s mother?
	TsetIn MotherOf(p).ToThing
	
	
Test: Loop1
- Thing p
- Sandbox.IsCitizen(p).Out =?= "Unstated"

Test: Loop2
- Thing p
- Thing mom
- MotherOf(p) = [[mom]]
- Sandbox.IsCitizen(p).Out =?= "Unstated"

Test: Loop3
- Thing p
- Thing mom
- MotherOf(p) = [[mom]]
- IsCitizenByLaw(p) = false
- IsCitizenByLaw(mom) = true
- Sandbox.IsCitizen(p).Out =?= true

Test: Loop4
- Thing p
- IsCitizenByLaw(p) = true
- Sandbox.IsCitizen(p).Out =?= true

Test: Loop5
- Thing p
- IsCitizenByLaw(p) = false
- Sandbox.IsCitizen(p).Out =?= "Unstated"

Test: Loop6
- Thing p
- Thing mom
- MotherOf(p) = [[mom]]
- IsCitizenByLaw(p) = false
- IsCitizen(mom) = false
- Sandbox.IsCitizen(p).Out =?= false


# TSET INPUTS

Tnum TestTsetCount(Thing p) =
	TestTset(p).Count

# >>What items are in {1}'s set?
TsetIn TestTset(Thing p)


Test: Tset1
- Thing p
- Thing joan
- TestTset(p) = [[joan]]
- Sandbox.TestTsetCount(p).Out =?= 1

Test: Tset2
- Thing p
- Thing jim
- Thing joan
- TestTset(p) = [[jim, joan]]
- Sandbox.TestTsetCount(p).Out =?= 2

Test: Tset3
- Thing p
- TestTset(p) = [[ ]]
- Sandbox.TestTsetCount(p).Out =?= 0

Test: Tset4
- Thing p
- Sandbox.TestTsetCount(p).Out =?= "Unstated"

Test: Tset5  # fail b/c doesn't output Tset data
- Thing p
- Thing jim
- Thing joan
- TestTset(p) = [[jim, joan]]
- Sandbox.TestTset(p).Out =?= "jim, joan"


# METHODS WITH THREE PARAMETERS

Tbool Another3ParamTest(Thing a, Thing b, Thing c) =
	TboolIn ABC(a,b,c)

TboolIn IsABC(Thing a, Thing b, Thing c) =
	Stub() |
	IsXYZ(a,b,c)

TboolIn IsXYZ(Thing x, Thing y, Thing z)

Test: Param3_1a
- Thing x
- Thing y
- Thing z
- IsXYZ(x,y,z) = true
- Sandbox.IsXYZ(x,y,z).Out =?= true

Test: Param3_1b
- Thing x
- Thing y
- Thing z
- IsXYZ(x,y,z) = false
- Sandbox.IsXYZ(x,y,z).Out =?= false

Test: Param3_1c
- Thing x
- Thing y
- Thing z
- Sandbox.IsXYZ(x,y,z).Out =?= "Unstated"

Test: Param3_2a
- Thing a
- Thing b
- Thing c
- ABC(a,b,c) = true
- Sandbox.Another3ParamTest(a,b,c).Out =?= true

Test: Param3_2b
- Thing a
- Thing b
- Thing c
- ABC(a,b,c) = false
- Sandbox.Another3ParamTest(a,b,c).Out =?= false

Test: Param3_2c
- Thing a
- Thing b
- Thing c
- Sandbox.Another3ParamTest(a,b,c).Out =?= "Unstated"


# TIME-VARYING BOOLEANS
	
# Time-varying boolean subrule
Tbool SomeTemporalBooleanSubrule() =
	rule
	
	Tbool rule =
		temporal:
		from Time.DawnOf -> false
		from 2000-01-01 -> true
		from 2001-01-01 -> false
		endtemporal
	
Test: TimeVaryingBooleanSub1
- Sandbox.SomeTemporalBooleanSubrule().AsOf(1999-03-09).Out =?= false

Test: TimeVaryingBooleanSub2
- Sandbox.SomeTemporalBooleanSubrule().AsOf(2000-03-09).Out =?= true

Test: TimeVaryingBooleanSub3
- Sandbox.SomeTemporalBooleanSubrule().AsOf(2002-03-09).Out =?= false		
	
	
# Time-varying boolean
Tbool SomeTemporalBoolean() =
	temporal:
	from Time.DawnOf -> false
	from 2000-01-01 -> true
	from 2001-01-01 -> false
	endtemporal
		
Test: TimeVaryingBoolean1
- Sandbox.SomeTemporalBoolean().AsOf(1999-03-09).Out =?= false

Test: TimeVaryingBoolean2
- Sandbox.SomeTemporalBoolean().AsOf(2000-03-09).Out =?= true

Test: TimeVaryingBoolean3
- Sandbox.SomeTemporalBoolean().AsOf(2002-03-09).Out =?= false		
		