# Namespace:    Hammurabi.Sandbox
# Summary:      A host of random unit tests
# Updated:      2012-09-16
# Author:       Michael Poulshock


# ELAPSED TIME - PERFORMANCE ISSUES

# Extremely poor performance
Tbool TimeError1(Thing t) =
	(new Tbool(true)).RunningElapsedYears >= 5

# Poor performance	
Tbool TimeError2(Thing t) =
	(new Tbool(true)).ElapsedYearsInSlidingWindow(10, "Year") >= 7
	
	
# INTERVIEW SEQUENCE WITH |~ OPERATOR

Tbool Test917(Thing a, Thing b) =
	Fam.IsBiologicalParentOf(a,b) &
	Imm.IsUSNational(a)				# Adding this condition causes interview to ask FamRel in both directions!

Tbool AnotherMethod(Thing p) =
	TboolIn TestMethod101(p) |~
	TboolIn TestMethod102(p)

# Note: These tests validate the logic, not the interview sequence. But
#       that sequence was tested and is also working properly (2012-08-11).

Test: 171824320
- Thing p
- TestMethod101(p) = new Tbool(Hstate.Unstated)
- TestMethod102(p) = false
- Sandbox.AnotherMethod(p).TestOutput =?= "Time.DawnOf False "

Test: 580982293
- Thing p
- TestMethod101(p) = new Tbool(Hstate.Unstated)
- TestMethod102(p) = true
- Sandbox.AnotherMethod(p).TestOutput =?= "Time.DawnOf True "

Test: 288489417
- Thing p
- TestMethod101(p) = Tbool(?)
- TestMethod102(p) = Tbool(?)
- Sandbox.AnotherMethod(p).TestOutput =?= "Time.DawnOf Uncertain "

Test: 798236451
- Thing p
- TestMethod101(p) = false
- Sandbox.AnotherMethod(p).TestOutput =?= "Time.DawnOf False "

Test: 416036083
- Thing p
- TestMethod101(p) = true
- Sandbox.AnotherMethod(p).TestOutput =?= "Time.DawnOf True "


# TSET.CONTAINS

Tbool SetContainsThing(Thing p1, Thing p2) =
	Fam.ChildrenOf(p1).Contains(p2)

Test: 85594484
- Things t1, t2
- ChildrenOf(t1) = [[t2]]
- Hammurabi.Sandbox.SetContainsThing(t1, t2).TestOutput =?= "Time.DawnOf True "


# ASK INTERMEDIATE QUESTION BEFORE DESCENDING TREE

TboolIn Test9(Thing p) =
	set.Exists(IsUSCitizen(_))
	
	Tset set =
		TsetIn SomeRandomPeople(p)

Tbool MeetsSomeCriteria(Thing p) =
	MeetsCriteria1(p) &
	TboolIn MeetsCriteria2(p)

TboolIn? MeetsCriteria1(Thing p) = 
	TboolIn Meets1a(p) &
	TboolIn Meets1b(p)
	
	
# UNKNOWN THINGS

Tbool SomeMethod(Thing t1, Thing t2) =
	true

Thing StubThing() =
	new Thing(Hstate.Stub)

Thing UnstatedThing() =
	new Thing(Hstate.Unstated)

Thing UncertainThing() =
	new Thing(Hstate.Uncertain)
	
Test: UncertainThing1
- Thing p
- Thing q
- Sandbox.SomeMethod(p,q).Out =?= true

Test: UncertainThing2
- Sandbox.SomeMethod(Sandbox.UnstatedThing(), Sandbox.StubThing()).Out =?= "Unstated"

Test: UncertainThing3
- Sandbox.SomeMethod(Sandbox.UnstatedThing(), Sandbox.UncertainThing()).Out =?= "Unstated"

Test: UncertainThing4
- Sandbox.SomeMethod(Sandbox.StubThing(), Sandbox.UncertainThing()).Out =?= "Stub"

Test: UncertainThing5
- Thing p
- Sandbox.SomeMethod(p, Sandbox.UncertainThing()).Out =?= "Uncertain"

Test: UncertainThing6
- Thing p
- Sandbox.SomeMethod(p, Sandbox.StubThing()).Out =?= "Stub"

Test: UncertainThing7
- Thing p
- Sandbox.SomeMethod(p, Sandbox.UnstatedThing()).Out =?= "Unstated"


# INFINITE LOOPS

# Recursive rule that looks for unknown people
TboolIn IsCitizen(Thing p) =
	# >> Is {1} a citizen by law?
	TboolIn IsCitizenByLaw(p) |
	IsCitizen(TheMotherOf(p))

# >>What's the name of {1}'s mother?
Thing TheMotherOf(Thing p) =
	# >>What's the name of {1}'s mother?
	TsetIn MotherOf(p).ToThing
	
	
Test: Loop1
- Thing p
- Sandbox.IsCitizen(p).Out =?= "Unstated"

Test: Loop2
- Thing p
- Thing mom
- MotherOf(p) = [[mom]]
- Sandbox.IsCitizen(p).Out =?= "Unstated"

Test: Loop3
- Thing p
- Thing mom
- MotherOf(p) = [[mom]]
- IsCitizenByLaw(p) = false
- IsCitizenByLaw(mom) = true
- Sandbox.IsCitizen(p).Out =?= true

Test: Loop4
- Thing p
- IsCitizenByLaw(p) = true
- Sandbox.IsCitizen(p).Out =?= true

Test: Loop5
- Thing p
- IsCitizenByLaw(p) = false
- Sandbox.IsCitizen(p).Out =?= "Unstated"

Test: Loop6
- Thing p
- Thing mom
- MotherOf(p) = [[mom]]
- IsCitizenByLaw(p) = false
- IsCitizen(mom) = false
- Sandbox.IsCitizen(p).Out =?= false

Test: 864022057
- Things t1, t2
- IsCitizen(t1) = Tbool(?)
- IsCitizenByLaw(t1) = false
- Things barry
- MotherOf(t1) = [[barry]]
- IsCitizen(barry) = Tbool(?)
- IsCitizenByLaw(barry) = false
- Things monroevius
- MotherOf(barry) = [[monroevius]]
- IsCitizen(monroevius) = Tbool(?)
- IsCitizenByLaw(monroevius) = true
- Hammurabi.Sandbox.IsCitizen(t1).TestOutput =?= "Time.DawnOf True "


# TSET INPUTS

Tnum TestTsetCount(Thing p) =
	TestTset(p).Count

# >>What items are in {1}'s set?
TsetIn TestTset(Thing p)


Test: Tset1
- Thing p
- Thing joan
- TestTset(p) = [[joan]]
- Sandbox.TestTsetCount(p).Out =?= 1

Test: Tset2
- Thing p
- Thing jim
- Thing joan
- TestTset(p) = [[jim, joan]]
- Sandbox.TestTsetCount(p).Out =?= 2

Test: Tset3
- Thing p
- TestTset(p) = [[ ]]
- Sandbox.TestTsetCount(p).Out =?= 0

Test: Tset4
- Thing p
- Sandbox.TestTsetCount(p).Out =?= "Unstated"

Test: Tset5  # fail b/c doesn't output Tset data
- Thing p
- Thing jim
- Thing joan
- TestTset(p) = [[jim, joan]]
- Sandbox.TestTset(p).Out =?= "jim, joan"


# METHODS WITH THREE PARAMETERS

Tbool Another3ParamTest(Thing a, Thing b, Thing c) =
	TboolIn ABC(a,b,c)

TboolIn IsABC(Thing a, Thing b, Thing c) =
	Stub() |
	IsXYZ(a,b,c)

TboolIn IsXYZ(Thing x, Thing y, Thing z)

Test: Param3_1a
- Thing x
- Thing y
- Thing z
- IsXYZ(x,y,z) = true
- Sandbox.IsXYZ(x,y,z).Out =?= true

Test: Param3_1b
- Thing x
- Thing y
- Thing z
- IsXYZ(x,y,z) = false
- Sandbox.IsXYZ(x,y,z).Out =?= false

Test: Param3_1c
- Thing x
- Thing y
- Thing z
- Sandbox.IsXYZ(x,y,z).Out =?= "Unstated"

Test: Param3_2a
- Thing a
- Thing b
- Thing c
- ABC(a,b,c) = true
- Sandbox.Another3ParamTest(a,b,c).Out =?= true

Test: Param3_2b
- Thing a
- Thing b
- Thing c
- ABC(a,b,c) = false
- Sandbox.Another3ParamTest(a,b,c).Out =?= false

Test: Param3_2c
- Thing a
- Thing b
- Thing c
- Sandbox.Another3ParamTest(a,b,c).Out =?= "Unstated"


# TIME-VARYING BOOLEANS
	
# Time-varying boolean subrule
Tbool SomeTemporalBooleanSubrule() =
	rule
	
	Tbool rule =
		temporal:
		from Time.DawnOf -> false
		from 2000-01-01 -> true
		from 2001-01-01 -> false
		endtemporal
	
Test: TimeVaryingBooleanSub1
- Sandbox.SomeTemporalBooleanSubrule().AsOf(1999-03-09).Out =?= false

Test: TimeVaryingBooleanSub2
- Sandbox.SomeTemporalBooleanSubrule().AsOf(2000-03-09).Out =?= true

Test: TimeVaryingBooleanSub3
- Sandbox.SomeTemporalBooleanSubrule().AsOf(2002-03-09).Out =?= false		
	
	
# Time-varying boolean
Tbool SomeTemporalBoolean() =
	temporal:
	from Time.DawnOf -> false
	from 2000-01-01 -> true
	from 2001-01-01 -> false
	endtemporal
		
Test: TimeVaryingBoolean1
- Sandbox.SomeTemporalBoolean().AsOf(1999-03-09).Out =?= false

Test: TimeVaryingBoolean2
- Sandbox.SomeTemporalBoolean().AsOf(2000-03-09).Out =?= true

Test: TimeVaryingBoolean3
- Sandbox.SomeTemporalBoolean().AsOf(2002-03-09).Out =?= false		
		

# UNIT TESTS


